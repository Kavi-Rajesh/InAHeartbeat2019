port = ''
num_of_readings = 300
account_sid = ""
auth_token = ""
output_phone = "+1"
our_phone = "+1"
num_to_run = 1

import serial
from twilio.rest import Client
import pandas
from sklearn.neural_network import MLPClassifier

#connect to serial port
ser = serial.Serial(port, 9600, timeout=2)

for i in range(num_to_run):

#PINKBANANAS
  #Connecting to Bluetooth
  #Need to have PySerial package downloaded

  target_name = 'PulseSensorProjectConnect'
  target_address = None

  raw_data = []
  new_data = []

  
  for i in range(num_of_readings):
    try:
      reading = ser.readline()
      if not reading:
          raise(serial.serialutil.SerialException)
      w = str(reading)
      q = w[2:5]
      print(q)
      raw_data.append(int(q))
    except serial.serialutil.SerialException:
        print("Exception")
        break
  
#BLUEBANANAS

  def find_peak(data, new_data):
    for i in range(len(data)):
        x = data[i]
        y = data[i+1]
        if (x >= y) & (x > 550):
          new_data.append(x)
          del data[0:i+1]
          print(len(data))
          break

  def find_bottom(data):
    for i in range(len(data)):
        x = data[i]
        y = data[i+1]
        if x < y:
          del data[0:i]
          print(len(data))
          break

  def find_high(data, new_data):
    for i in range(len(data)):
        x = data[i]
        y = data[i+1]
        if x >= y:
          new_data.append(x)
          del data[0:i]
          print(len(data))
          break

  def find_low(data, new_data):
    for i in range(len(data)):
        x = data[i]
        y = data[i+1]
        if x < y:
          new_data.append(x)
          del data[0:i]
          print(len(data))
          break

  for i in range(5):
    find_peak(raw_data, new_data)
    find_bottom(raw_data)
    find_high(raw_data, new_data)
    find_low(raw_data, new_data)

  print(new_data)

  #Load CSV using Pandas from URL
  url = "https://raw.githubusercontent.com/Kavi-Rajesh/OFFICIALLLLL2019999/master/pulsesensorvalues.csv"
  names = ['d1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'd10', 'd11', 'd12', 'd13', 'd14', 'd15', 'checking']
  data = pandas.read_csv(url, names=names)
  print("CSV Values are ", data)
  y = data.pop('checking').values

  clf = MLPClassifier(solver='lbfgs' , alpha=1e-5, hidden_layer_sizes=(5,2), random_state=1)
  clf.fit(data, y)
  p = clf.predict([[new_data]])
  if p == 0:
    output = 'REGULAR'
  else:
    output = 'IRREGULAR'
    
#PURPLEBANANAS
    
    client = Client(account_sid, auth_token)
    client.messages.create(to=output_phone, 
                          from_=our_phone, 
                          body="ALERT: IRREGULAR HEARTBEAT")
    
  print("Your heart is ", output)

  del raw_data[0:]
  del new_data[0:]

#END
